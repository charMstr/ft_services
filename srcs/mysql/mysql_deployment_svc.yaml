apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  labels:
    app: mysql-app
spec:
  selector:
    matchLabels:
      app: mysql-app
  template:
    metadata:
      labels:
        app: mysql-app
    spec:
      containers:
      - name: mysql
        image: mysql_image
        imagePullPolicy: Never
        ports:
        - containerPort: 3306
          name: mysql-cont-port
        env:
        - name: __MYSQL_DB_NAME__
          valueFrom:
            secretKeyRef:
              name: wp-mysql-phpma-secret
              key: wordpress-db-name
        - name: __MYSQL_DB_USER__
          valueFrom:
            secretKeyRef:
              name: wp-mysql-phpma-secret
              key: mysql-db-user
        - name: __MYSQL_DB_PASSWD__
          valueFrom:
            secretKeyRef:
              name: wp-mysql-phpma-secret
              key: mysql-db-passwd
        - name: __MYSQL_ADMIN__
          valueFrom:
            secretKeyRef:
              name: wp-mysql-phpma-secret
              key: mysql-admin
        - name: __MYSQL_ADMIN_PASSWD__
          valueFrom:
            secretKeyRef:
              name: wp-mysql-phpma-secret
              key: mysql-admin-passwd
        volumeMounts:
        - name: mysql-volume
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql-volume
        persistentVolumeClaim:
          claimName: mysql-pv-claim

---

#the storage class is provided by default by minikube.
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  labels:
    app: mysql-app
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---

#No need to create an external cluster ip for a backend service.
apiVersion: v1
kind: Service
metadata:
  name: mysql-service
  labels:
    app: mysql-app
spec:
  selector:
    app: mysql-app
  ports:
  - port: 3306
    targetPort: mysql-cont-port
    protocol: TCP
    name: mysql-service-port
